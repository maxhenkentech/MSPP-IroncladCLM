{
	"swagger": "2.0",
	"info": {
		"title": "Ironclad Digital Contracting",
		"description": "Using this connector allows admins and user to connect to their Ironclad CLM demo, preview and production instances and perform various operations such as creating, updating, deleting and retrieving records, workflows, comments, approvals, signatures, attachments, and more. Follow https://developer.ironcladapp.com/reference/register-oauth-client and register a client to get the client ID and client secret.",
		"version": "3.0",
		"contact": {
			"name": "Amadeus IT Group, S.A. - LEG TechOps",
			"url": "https://www.amadeus.com",
			"email": "LEGTechOps@amadeus.com"
		}
	},
	"host": "eu1.ironcladapp.com",
	"basePath": "/public/api/v1/",
	"schemes": [
		"https"
	],
	"x-ms-connector-metadata": [
		{
			"propertyName": "Website",
			"propertyValue": "https://www.amadeus.com"
		},
		{
			"propertyName": "Privacy policy",
			"propertyValue": "https://www.amadeus.com"
		},
		{
			"propertyName": "Categories",
			"propertyValue": "Commerce"
		}
	],
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	],
	"paths": {
		"/records/smart-import": {
			"get": {
				"description": "Retrieve status of predictions of specific smart import record or all records in an import, one of Record Id or Import Id is required.",
				"operationId": "RerievePredictions",
				"summary": "Retrieve Predictions",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/recordId_query"
					},
					{
						"$ref": "#/parameters/importId_query"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"type": "array",
							"title": "Predictions",
							"description": "The prediction statuses for the smart import.",
							"x-ms-visibility": "important",
							"items": {
								"title": "Prediction",
								"type": "object",
								"description": "The prediction status for a record in the smart import.",
								"x-ms-visibility": "important",
								"properties": {
									"recordId": {
										"$ref": "#/definitions/recordId"
									},
									"status": {
										"type": "string",
										"title": "Status",
										"description": "The status of the prediction.",
										"x-ms-visibility": "important"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a Smart Import Record",
				"description": "Upload a file to create a record with smart import and predictions. Provide none of recordType, newRecordTypeId, or newRecordTypeDisplayName to default to Imported type.",
				"operationId": "CreateSmartImportRecord",
				"x-ms-visibility": "important",
				"consumes": [
					"multipart/form-data"
				],
				"parameters": [
					{
						"$ref": "#/parameters/recordType_formData"
					},
					{
						"$ref": "#/parameters/newRecordTypeId_formData"
					},
					{
						"$ref": "#/parameters/newRecordTypeDisplayName_formData"
					},
					{
						"$ref": "#/parameters/attachment_formData"
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation",
						"schema": {
							"type": "object",
							"properties": {
								"recordId": {
									"$ref": "#/definitions/recordId"
								},
								"importId": {
									"$ref": "#/definitions/importId"
								},
								"remainingCredits": {
									"$ref": "#/definitions/remainingCredits"
								}
							}
						}
					}
				}
			}
		},
		"/records/smart-import/{SmartImport}/": {
			"post": {
				"consumes": [
					"multipart/form-data"
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"type": "object",
							"properties": {
								"recordId": {
									"$ref": "#/definitions/recordId"
								},
								"importId": {
									"$ref": "#/definitions/importId"
								},
								"remainingCredits": {
									"$ref": "#/definitions/remainingCredits"
								}
							}
						}
					}
				},
				"summary": "Upload a Smart Import Record to an existing Import",
				"description": "Upload a file to an existing import and create a record with smart import and predictions. Provide none of recordType, newRecordTypeId, or newRecordTypeDisplayName to default to Imported type.",
				"operationId": "ExistingSmartImportRecord",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/smartImport_path"
					},
					{
						"$ref": "#/parameters/recordType_formData"
					},
					{
						"$ref": "#/parameters/newRecordTypeId_formData"
					},
					{
						"$ref": "#/parameters/newRecordTypeDisplayName_formData"
					},
					{
						"$ref": "#/parameters/attachment_formData"
					}
				]
			}
		},
		"/records": {
			"get": {
				"description": "View all records in the company, with filtering available via query parameters.",
				"operationId": "ListAllRecords",
				"parameters": [
					{
						"$ref": "#/parameters/page_query"
					},
					{
						"$ref": "#/parameters/pageSize_query"
					},
					{
						"$ref": "#/parameters/record_type_query"
					},
					{
						"$ref": "#/parameters/lastUpdated_query"
					},
					{
						"$ref": "#/parameters/sortField_query"
					},
					{
						"$ref": "#/parameters/sortDirection_query"
					},
					{
						"$ref": "#/parameters/filter_query"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"properties": {
								"count": {
									"$ref": "#/definitions/count"
								},
								"list": {
									"items": {
										"$ref": "#/definitions/record"
									},
									"type": "array",
									"title": "Records",
									"description": "The records matching the query.",
									"x-ms-visibility": "advanced"
								},
								"page": {
									"$ref": "#/definitions/page"
								},
								"pageSize": {
									"$ref": "#/definitions/pageSize"
								}
							},
							"type": "object"
						}
					}
				},
				"summary": "List All Records",
				"x-ms-visibility": "important"
			},
			"post": {
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"$ref": "#/definitions/record"
						}
					}
				},
				"summary": "Create a Record",
				"description": "Create a contract record by specifying its intended metadata properties.",
				"operationId": "CreateRecord",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": false,
						"x-ms-visibility": "important",
						"schema": {
							"type": "object",
							"properties": {
								"properties": {
									"type": "object",
									"properties": {

									},
									"description": "The properties of the record.",
									"x-ms-visibility": "important",
									"title": "Properties"
								},
								"parent": {
									"$ref": "#/definitions/parent"
								},
								"children": {
									"$ref": "#/definitions/children"
								},
								"links": {
									"$ref": "#/definitions/links"
								},
								"type": {
									"$ref": "#/definitions/record_type_body"
								},
								"name": {
									"$ref": "#/definitions/recordName"
								}
							}
						}
					}
				]
			}
		},
		"/workflows/{Workflow}/document/{Key}/download": {
			"get": {
				"description": "Retrieve a document from a Workflow",
				"operationId": "GetWorkflowDocument",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					},
					{
						"$ref": "#/parameters/documentKey_path"
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"x-ms-visibility": "internal"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"type": "object",
							"properties": {
								"$content-type": {
									"type": "string",
									"description": "$content-type"
								},
								"$content": {
									"type": "string",
									"description": "$content"
								}
							}
						}
					}
				},
				"summary": "Get Workflow Document"
			}
		},
		"/records/metadata": {
			"get": {
				"description": "View the schema associated with contract records, including available record types and metadata properties.",
				"operationId": "RetrieveRecordSchema",
				"parameters": [

				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"properties": {
								"attachments": {
									"$ref": "#/definitions/recordAttachmentsDictionary"
								},
								"attachmentsArray": {
									"$ref": "#/definitions/recordAttachmentsArray"
								},
								"properties": {
									"$ref": "#/definitions/recordPropertiesDictionary"
								},
								"propertiesArray": {
									"$ref": "#/definitions/recordPropertiesArray"
								},
								"recordTypes": {
									"$ref": "#/definitions/recordTypesDictionary"
								},
								"recordTypesArray": {
									"$ref": "#/definitions/recordTypesArray"
								}
							},
							"type": "object"
						}
					}
				},
				"summary": "Retrieve Records Schema",
				"x-ms-visibility": "important"
			}
		},
		"/records/{Record}": {
			"get": {
				"description": "View a specific record and its associated data.",
				"operationId": "RetrieveRecord",
				"parameters": [
					{
						"$ref": "#/parameters/record_ID_path"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"$ref": "#/definitions/record"
						}
					}
				},
				"summary": "Retrieve Record",
				"x-ms-visibility": "important"
			},
			"delete": {
				"responses": {
					"200": {
						"description": "Success"
					},
					"204": {
						"description": "Success"
					}
				},
				"summary": "Delete a Record",
				"description": "Delete an existing record.",
				"operationId": "DeleteRecord",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/record_ID_path"
					},
					{
						"name": "Prefer",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "return=representation",
						"x-ms-visibility": "internal"
					}
				]
			},
			"put": {
				"responses": {
					"default": {
						"description": "default",
						"schema": {

						}
					}
				},
				"summary": "Replace a Record",
				"description": "Update an existing record with a new set of metadata.",
				"operationId": "ReplaceRecord",
				"parameters": [
					{
						"$ref": "#/parameters/record_ID_path"
					},
					{
						"name": "body",
						"in": "body",
						"required": false,
						"x-ms-visibility": "important",
						"schema": {
							"type": "object",
							"properties": {
								"properties": {
									"type": "object",
									"title": "Workflow Properties",
									"description": "Properties to be added to the record",
									"x-ms-visibility": "important"
								},
								"type": {
									"$ref": "#/definitions/record_type_body"
								},
								"name": {
									"$ref": "#/definitions/recordName"
								}
							}
						}
					}
				]
			},
			"patch": {
				"responses": {
					"default": {
						"description": "default",
						"schema": {

						}
					}
				},
				"summary": "Update Record Metadata",
				"description": "Update specific fields on a record.",
				"operationId": "UpdateRecordMetadata",
				"parameters": [
					{
						"$ref": "#/parameters/record_ID_path"
					},
					{
						"name": "body",
						"in": "body",
						"required": false,
						"x-ms-visibility": "important",
						"schema": {
							"type": "object",
							"properties": {
								"addProperties": {
									"type": "object",
									"title": "Add Properties",
									"description": "Properties to be added to the record",
									"x-ms-visibility": "important"
								},
								"removeProperties": {
									"type": "array",
									"title": "Remove Properties",
									"description": "An array of properties to remove",
									"x-ms-visibility": "important",
									"items": {
										"title": "Property Name",
										"type": "string",
										"description": "The name of the property to remove",
										"x-ms-visibility": "important"
									}
								},
								"type": {
									"$ref": "#/definitions/record_type_body"
								},
								"name": {
									"$ref": "#/definitions/recordName"
								}
							}
						}
					}
				]
			}
		},
		"/webhooks": {
			"x-ms-notification-content": {
				"description": "Ironclad Event",
				"schema": {
					"$ref": "#/definitions/webhookNotificationContent"
				}
			},
			"post": {
				"description": "When a Workflow is updated",
				"operationId": "WorkflowUpdated",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"events": {
									"description": "The trigger events for the Worklfow",
									"items": {
										"default": "workflow_updated",
										"enum": [
											"workflow_updated",
											"workflow_launched",
											"workflow_cancelled",
											"workflow_completed",
											"workflow_approval_status_changed",
											"workflow_attribute_updated",
											"workflow_comment_reaction_added",
											"workflow_comment_reaction_removed",
											"workflow_comment_added",
											"workflow_comment_removed",
											"workflow_comment_updated",
											"workflow_counterparty_invite_sent",
											"workflow_counterparty_invite_revoked",
											"workflow_documents_added",
											"workflow_documents_removed",
											"workflow_documents_updated",
											"workflow_documents_renamed",
											"workflow_document_edited",
											"workflow_paused",
											"workflow_resumed",
											"workflow_signature_packet_sent",
											"workflow_signature_packet_uploaded",
											"workflow_signature_packet_cancelled"
										],
										"title": "Event",
										"type": "string",
										"x-ms-enum-values": [
											{
												"displayName": "Workflow Updated",
												"value": "workflow_updated"
											},
											{
												"displayName": "Workflow Launched",
												"value": "workflow_launched"
											},
											{
												"displayName": "Workflow Cancelled",
												"value": "workflow_cancelled"
											},
											{
												"displayName": "Workflow Completed",
												"value": "workflow_completed"
											},
											{
												"displayName": "Approval Status Changed",
												"value": "workflow_approval_status_changed"
											},
											{
												"displayName": "Workflow Attributes Updated",
												"value": "workflow_attribute_updated"
											},
											{
												"displayName": "Comment Reaction Added",
												"value": "workflow_comment_reaction_added"
											},
											{
												"displayName": "Comment Reaction Removed",
												"value": "workflow_comment_reaction_removed"
											},
											{
												"displayName": "Comment Added",
												"value": "workflow_comment_added"
											},
											{
												"displayName": "Comment Removed",
												"value": "workflow_comment_removed"
											},
											{
												"displayName": "Comment Updated",
												"value": "workflow_comment_updated"
											},
											{
												"displayName": "Counterparty Invite Sent",
												"value": "workflow_counterparty_invite_sent"
											},
											{
												"displayName": "Counterparty Invite Revoked",
												"value": "workflow_counterparty_invite_revoked"
											},
											{
												"displayName": "Workflow Document Added",
												"value": "workflow_documents_added"
											},
											{
												"displayName": "Workflow Document Removed",
												"value": "workflow_documents_removed"
											},
											{
												"displayName": "Workflow Document Updated",
												"value": "workflow_documents_updated"
											},
											{
												"displayName": "Workflow Document Edited",
												"value": "workflow_document_edited"
											},
											{
												"displayName": "Workflow Paused",
												"value": "workflow_paused"
											},
											{
												"displayName": "Workflow Resumed",
												"value": "workflow_resumed"
											},
											{
												"displayName": "Signature Packet Sent",
												"value": "workflow_signature_packet_sent"
											},
											{
												"displayName": "Signature Packet Uploaded",
												"value": "workflow_signature_packet_uploaded"
											},
											{
												"displayName": "Signature Packet Cancelled",
												"value": "workflow_signature_packet_cancelled"
											}
										],
										"x-ms-visibility": "important"
									},
									"title": "Trigger Events",
									"type": "array"
								},
								"targetURL": {
									"description": "targetURL",
									"title": "Target URL",
									"type": "string",
									"x-ms-notification-url": true,
									"x-ms-visibility": "internal"
								}
							},
							"required": [
								"targetURL",
								"events"
							],
							"type": "object",
							"x-ms-visibility": "important"
						},
						"x-ms-visibility": "important"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"properties": {

							},
							"type": "object"
						}
					}
				},
				"summary": "Workflow Updated",
				"x-ms-trigger": "single",
				"x-ms-visibility": "important"
			}
		},
		"/workflow-schemas": {
			"get": {
				"description": "List the ID and display name of all available Workflow schemas",
				"operationId": "ListWorkflowSchemas",
				"parameters": [
					{
						"$ref": "#/parameters/form_query"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"properties": {
								"list": {
									"description": "The list of Workflow template schemas",
									"title": "Template Schemas",
									"items": {
										"properties": {
											"id": {
												"$ref": "#/definitions/workflowTemplateId"
											},
											"name": {
												"$ref": "#/definitions/workflowTemplateTitle"
											},
											"schema": {
												"$ref": "#/definitions/workflowSchema"
											}
										},
										"type": "object"
									},
									"type": "array"
								}
							},
							"type": "object"
						}
					}
				},
				"summary": "List Workflow Template Schemas",
				"x-ms-visibility": "important"
			}
		},
		"/workflow-schemas/{Template}": {
			"get": {
				"description": "Retrieve a single Workflow schema",
				"operationId": "GetWorkflowSchema",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_template_ID_path"
					},
					{
						"$ref": "#/parameters/form_query"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"properties": {
								"id": {
									"$ref": "#/definitions/workflowTemplateId"
								},
								"name": {
									"$ref": "#/definitions/workflowTemplateTitle"
								},
								"schema": {
									"$ref": "#/definitions/workflowSchema"
								},
								"schemaArray": {
									"title": "Schema as Array",
									"description": "The workflow schema as an array",
									"x-ms-visibility": "important",
									"type": "array",
									"items": {
										"type": "object",
										"title": "Schema Field",
										"description": "A field in the workflow schema",
										"x-ms-visibility": "important",
										"properties": {
											"propertyName": {
												"type": "string",
												"title": "System Name",
												"description": "The system name of the field",
												"x-ms-visibility": "important"
											},
											"propertyProperties": {
												"type": "object",
												"title": "Properties",
												"description": "The properties of the workflow Field",
												"x-ms-visibility": "advanced",
												"properties": {
													"type": {
														"$ref": "#/definitions/dataType"
													},
													"displayName": {
														"$ref": "#/definitions/propertyDisplayName"
													},
													"elementType": {
														"title": "Element Type",
														"description": "The type of elements in the array",
														"x-ms-visibility": "advanced",
														"type": "object",
														"properties": {
															"type": {
																"$ref": "#/definitions/dataType"
															},
															"schema": {
																"type": "object",
																"title": "Schema",
																"description": "The schema of the array elements",
																"x-ms-visibility": "advanced"
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"type": "object"
						}
					}
				},
				"summary": "Get Workflow Template Schema"
			}
		},
		"/workflows": {
			"get": {
				"description": "List all Workflows",
				"operationId": "ListWorkflows",
				"parameters": [
					{
						"$ref": "#/parameters/page_query"
					},
					{
						"$ref": "#/parameters/pageSize_query"
					},
					{
						"$ref": "#/parameters/sortField_query"
					},
					{
						"$ref": "#/parameters/sortDirection_query"
					},
					{
						"$ref": "#/parameters/workflow_status_query"
					},
					{
						"$ref": "#/parameters/workflow_template_ID_query"
					},
					{
						"$ref": "#/parameters/lastUpdated_query"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"properties": {
								"count": {
									"$ref": "#/definitions/count"
								},
								"list": {
									"description": "The workflows as an array",
									"title": "Workflows",
									"items": {
										"$ref": "#/definitions/workflow"
									},
									"type": "array",
									"x-msp-visibility": "advanced"
								},
								"page": {
									"$ref": "#/definitions/page"
								},
								"pageSize": {
									"$ref": "#/definitions/pageSize"
								}
							},
							"type": "object"
						}
					}
				},
				"summary": "List Workflows"
			},
			"post": {
				"description": "Launch a new Workflow synchronously.",
				"operationId": "CreateWorkflow",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"creator": {
									"$ref": "#/definitions/creator_body"
								},
								"template": {
									"$ref": "#/definitions/workflow_template_ID_body"
								},
								"attributes": {
									"$ref": "#/definitions/attributes"
								}
							},
							"required": [
								"creator",
								"template",
								"attributes"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"properties": {
								"id": {
									"$ref": "#/definitions/workflowId"
								},
								"title": {
									"$ref": "#/definitions/workflowTitle"
								}
							},
							"type": "object"
						}
					}
				},
				"summary": "Create a Workflow Synchronously",
				"x-ms-visibility": "important"
			}
		},
		"/workflows/{Workflow}": {
			"get": {
				"description": "Retrieve a Workflow",
				"operationId": "RetrieveWorkflow",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"$ref": "#/definitions/workflow"
						}
					}
				},
				"summary": "View the data associated with a specific workflow.",
				"x-ms-visibility": "important"
			}
		},
		"/workflows/{Workflow}/signatures": {
			"get": {
				"description": "Returns a list of workflow signers and the status of their signature.",
				"operationId": "ListWorkflowSignatures",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"type": "object",
							"properties": {
								"workflowId": {
									"$ref": "#/definitions/workflowId"
								},
								"title": {
									"$ref": "#/definitions/workflowTitle"
								},
								"signers": {
									"$ref": "#/definitions/signers"
								}
							}
						}
					},
					"400": {
						"description": "default",
						"schema": {
							"type": "object",
							"title": "Error",
							"description": "An error returned by the api",
							"properties": {
								"code": {
									"$ref": "#/definitions/code"
								},
								"message": {
									"$ref": "#/definitions/errorMessage"
								}
							}
						}
					},
					"404": {
						"description": "default",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"$ref": "#/definitions/code"
								},
								"message": {
									"$ref": "#/definitions/errorMessage"
								},
								"param": {
									"$ref": "#/definitions/param"
								}
							}
						}
					}
				},
				"summary": "List All Workflow Signers",
				"x-ms-visibility": "important"
			}
		},
		"/workflows/{Workflow}/approvals": {
			"get": {
				"description": "List all Workflow Approvals",
				"operationId": "ListWorkflowApprovals",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"type": "object",
							"properties": {
								"workflowId": {
									"$ref": "#/definitions/workflowId"
								},
								"title": {
									"$ref": "#/definitions/workflowTitle"
								},
								"approvalGroups": {
									"type": "array",
									"items": {
										"title": "Approval Group",
										"description": "An approval group in this Workflow.",
										"x-ms-visibility": "important",
										"type": "object",
										"properties": {
											"reviewers": {
												"type": "array",
												"title": "Reviewers",
												"description": "A list of reviewers for this Workflow.",
												"items": {
													"title": "Reviewer",
													"description": "A reviewer for this Workflow",
													"x-ms-visibility": "important",
													"type": "object",
													"properties": {
														"role": {
															"$ref": "#/definitions/roleId"
														},
														"displayName": {
															"$ref": "#/definitions/roleDisplayName"
														},
														"reviewerType": {
															"$ref": "#/definitions/reviewerType"
														},
														"status": {
															"$ref": "#/definitions/reviewerStatus"
														}
													}
												}
											}
										}
									},
									"description": "Approval groups assigned to this Workflow.",
									"title": "Approval Groups",
									"x-ms-visibility": "important"
								},
								"roles": {
									"$ref": "#/definitions/roles"
								}
							}
						}
					}
				},
				"summary": "Returns a list of approvals for the workflow. The approvalGroups property will display only triggered approvals (i.e. conditional approvals that have not been triggered will not appear).",
				"x-ms-visibility": "important"
			}
		},
		"/workflows/{Workflow}/approvals/{Role}": {
			"patch": {
				"description": "Updates an approval to the specified status. Approvals can only be updated during the Review step.",
				"operationId": "UpdateWorkflowApprovals",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					},
					{
						"$ref": "#/parameters/role_ID_path"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"user": {
									"type": "object",
									"x-ms-visibility": "important",
									"title": "User Object",
									"description": "The Ironclad user approving the workflow. The user must be currently assigned as the approver.",
									"properties": {
										"type": {
											"type": "string",
											"x-ms-visibility": "important",
											"default": "email",
											"title": "User Attribute Type",
											"description": "The attribute to identify the user",
											"enum": [
												"email"
											]
										},
										"email": {
											"$ref": "#/definitions/userEmail"
										}
									},
									"required": [
										"type",
										"email"
									]
								},
								"status": {
									"x-ms-visibility": "important",
									"type": "string",
									"title": "Status",
									"description": "The new approval status.",
									"enum": [
										"approved",
										"pending"
									]
								}
							},
							"required": [
								"user",
								"status"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"type": "boolean",
							"description": "True if the approval was successfully updated, false otherwise.",
							"x-ms-visibility": "important",
							"title": "Approval Updated"
						}
					}
				},
				"summary": "Update Approval on a Workflow",
				"x-ms-visibility": "important"
			}
		},
		"/workflows/{Workflow}/comments": {
			"post": {
				"responses": {
					"500": {
						"description": "default",
						"schema": {

						}
					}
				},
				"summary": "Create a Comment on a Workflow",
				"description": "Creates a comment in the specified workflow's activity feed.",
				"operationId": "CreateComment",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					},
					{
						"name": "body",
						"in": "body",
						"required": false,
						"schema": {
							"type": "object",
							"properties": {
								"addUsersToWorkflow": {
									"$ref": "#/definitions/addUsersToWorkflow"
								},
								"creator": {
									"$ref": "#/definitions/creator_body"
								},
								"comment": {
									"$ref": "#/definitions/commentText"
								},
								"repliedToActivityFeedMessageId": {
									"$ref": "#/definitions/repliedToActivityFeedMessageId"
								}
							},
							"required": [
								"comment",
								"creator"
							]
						}
					}
				],
				"x-ms-visibility": "important"
			},
			"get": {
				"description": "Return a list of comments on a workflow.",
				"operationId": "ListWorkflowComments",
				"summary": "List all Comments on a Workflow",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					},
					{
						"$ref": "#/parameters/page_query"
					},
					{
						"$ref": "#/parameters/pageSize_query"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"type": "object",
							"properties": {
								"count": {
									"$ref": "#/definitions/count"
								},
								"page": {
									"$ref": "#/definitions/page"
								},
								"pageSize": {
									"$ref": "#/definitions/pageSize"
								},
								"list": {
									"$ref": "#/definitions/commentsGet"
								}
							}
						}
					}
				}
			}
		},
		"/records/{Record}/attachments/signedCopy": {
			"post": {
				"responses": {
					"200": {
						"description": "default",
						"schema": {

						}
					},
					"500": {
						"description": "default",
						"schema": {

						}
					}
				},
				"summary": "Post Signed Copy",
				"operationId": "PostSigendCopyDocument",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/record_ID_path"
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"x-ms-visibility": "internal"
					},
					{
						"name": "body",
						"in": "body",
						"required": false,
						"schema": {
							"type": "object",
							"properties": {
								"$content-type": {
									"type": "string",
									"title": "Content Type",
									"x-ms-visibility": "internal",
									"default": "multipart/form-data"
								},
								"$multipart": {
									"type": "array",
									"title": "Multipart",
									"x-ms-visibility": "important",
									"items": {
										"title": "Multipart Array Object",
										"x-ms-visibility": "important",
										"type": "object",
										"description": "A multipart content object.",
										"properties": {
											"headers": {
												"type": "object",
												"title": "Headers",
												"x-ms-visibility": "important",
												"properties": {
													"Content-Disposition": {
														"title": "Content Disposition",
														"description": "The content disposition of the multipart array object.",
														"type": "string",
														"x-ms-visibility": "important"
													}
												}
											},
											"body": {
												"title": "Multipart Body",
												"description": "The body of the multipart array object.",
												"x-ms-visibility": "important"
											}
										}
									}
								}
							},
							"required": [
								"$content-type",
								"$multipart"
							]
						}
					}
				],
				"description": "Retrieve a repository record attachment by its key."
			}
		},
		"/records/{Record}/attachments/{Key}": {
			"get": {
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"type": "object",
							"properties": {
								"$content-type": {
									"type": "string",
									"description": "$content-type"
								},
								"$content": {
									"type": "string",
									"description": "$content"
								}
							}
						}
					}
				},
				"summary": "Retrieve an Attachment on a Record",
				"operationId": "RetrieveAttachment",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/record_ID_path"
					},
					{
						"$ref": "#/parameters/documentKey_path"
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"x-ms-visibility": "internal"
					}
				],
				"description": "View an attachment associated with a specific record."
			},
			"delete": {
				"responses": {
					"200": {
						"description": "default",
						"schema": {

						}
					},
					"500": {
						"description": "default",
						"schema": {

						}
					}
				},
				"summary": "Delete an Attachment on a Record",
				"operationId": "DeleteAttachment",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/record_ID_path"
					},
					{
						"$ref": "#/parameters/documentKey_path"
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"x-ms-visibility": "internal"
					}
				],
				"description": "Remove an attachment associated with a specific record."
			}
		},
		"/workflows/async": {
			"post": {
				"description": "Launch a new Workflow asynchronously for non-blocking performance, which is helpful when/if you provide files to the Workflow.",
				"operationId": "CreateWorkflowAsync",
				"summary": "Create a Workflow Asynchronously",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"creator": {
									"$ref": "#/definitions/creator_body"
								},
								"template": {
									"$ref": "#/definitions/workflow_template_ID_body"
								},
								"attributes": {
									"$ref": "#/definitions/attributes"
								}
							},
							"required": [
								"creator",
								"template",
								"attributes"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"properties": {
								"asyncJobId": {
									"$ref": "#/definitions/asyncJobId"
								},
								"asyncJobStatusUrl": {
									"$ref": "#/definitions/asyncJobStatusUrl"
								}
							},
							"type": "object"
						}
					}
				}
			}
		},
		"/workflows/async/{asyncJob_path}": {
			"get": {
				"description": "",
				"parameters": [
					{
						"$ref": "#/parameters/asyncJob_path"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"properties": {
								"status": {
									"description": "The status of the asynchronous job",
									"title": "Status",
									"type": "string",
									"x-ms-visibility": "important"
								}
							},
							"type": "object"
						}
					}
				}
			}
		},
		"/workflows/{Workflow}/approval-requests": {
			"get": {
				"description": "Returns a list of approval requests that have taken place on the workflow.",
				"operationId": "ListApprovalRequests",
				"summary": "Retrieve the Approval Requests on a Workflow",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					},
					{
						"$ref": "#/parameters/page_query"
					},
					{
						"$ref": "#/parameters/pageSize_query"
					},
					{
						"$ref": "#/parameters/actionDetails_query"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"properties": {
								"count": {
									"$ref": "#/definitions/count"
								},
								"list": {
									"description": "The approval requests as an array",
									"title": "Approval Requests",
									"items": {
										"type": "object",
										"properties": {
											"startTime": {
												"$ref": "#/definitions/startTime"
											},
											"endTime": {
												"$ref": "#/definitions/endTime"
											},
											"status": {
												"$ref": "#/definitions/approvalStatus"
											},
											"actorId": {
												"$ref": "#/definitions/actorId"
											},
											"actorType": {
												"$ref": "#/definitions/actorType"
											},
											"duration": {
												"$ref": "#/definitions/duration"
											},
											"role": {
												"$ref": "#/definitions/roleId"
											},
											"roleName": {
												"$ref": "#/definitions/roleDisplayName"
											},
											"approvalType": {
												"$ref": "#/definitions/approvalType"
											}
										}
									},
									"type": "array"
								},
								"page": {
									"$ref": "#/definitions/page"
								},
								"pageSize": {
									"$ref": "#/definitions/pageSize"
								}
							},
							"type": "object"
						}
					}
				}
			}
		},
		"/workflows/{Workflow}/turn-history": {
			"get": {
				"x-ms-visibility": "important",
				"summary": "Retrieve the Turn History on a Workflow",
				"operationId": "ListTurnHistory",
				"description": "An array of objects for each turn on a workflow.",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					},
					{
						"$ref": "#/parameters/page_query"
					},
					{
						"$ref": "#/parameters/pageSize_query"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"properties": {
								"count": {
									"$ref": "#/definitions/count"
								},
								"list": {
									"description": "The turn history as an array",
									"title": "Turn History",
									"items": {
										"type": "object",
										"properties": {
											"turnParty": {
												"$ref": "#/definitions/turnParty"
											},
											"turnStartTime": {
												"$ref": "#/definitions/turnStartTime"
											},
											"turnLocation": {
												"$ref": "#/definitions/turnLocation"
											},
											"turnUser": {
												"$ref": "#/definitions/userId"
											},
											"turnUserEmail": {
												"$ref": "#/definitions/userEmail"
											},
											"turnEndTime": {
												"$ref": "#/definitions/turnEndTime"
											},
											"turnNumber": {
												"$ref": "#/definitions/turnNumber"
											}
										}
									},
									"type": "array"
								},
								"page": {
									"$ref": "#/definitions/page"
								},
								"pageSize": {
									"$ref": "#/definitions/pageSize"
								}
							},
							"type": "object"
						}
					}
				}
			}
		},
		"/workflows/{Workflow}/upload-signed": {
			"get": {
				"summary": "Create a Signed Document on a Workflow",
				"operationId": "UploadSignedDocument",
				"x-ms-visibility": "important",
				"description": "Upload a fully or partially signed document to a specified workflow that is in sign step.",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/workflows/{Workflow}/participants": {
			"get": {
				"summary": "List All Workflow Participants",
				"description": "Returns a list of workflow participants.",
				"operationId": "ListWorkflowParticipants",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					},
					{
						"$ref": "#/parameters/page_query"
					},
					{
						"$ref": "#/parameters/pageSize_query"
					},
					{
						"$ref": "#/parameters/userEmail_query"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"properties": {
								"count": {
									"$ref": "#/definitions/count"
								},
								"list": {
									"description": "The participants as an array.",
									"title": "Participants",
									"items": {
										"type": "object",
										"properties": {
											"email": {
												"$ref": "#/definitions/userEmail"
											},
											"userId": {
												"$ref": "#/definitions/userId"
											}
										}
									},
									"type": "array"
								},
								"page": {
									"$ref": "#/definitions/page"
								},
								"pageSize": {
									"$ref": "#/definitions/pageSize"
								}
							},
							"type": "object"
						}
					}
				}
			}
		},
		"/workflows/{Workflow}/revert-to-review": {
			"post": {
				"description": "Reverts a workflow to the Review step. Only workflows sourced from Workflow Designer and in the Sign step can be reverted.",
				"operationId": "RevertToReview",
				"summary": "Revert a Workflow to the Review Step",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					},
					{
						"$ref": "#/parameters/revertingUser_body"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/workflows/{Workflow}/cancel": {
			"post": {
				"description": "Cancel a Workflow.",
				"operationId": "CancelWorkflow",
				"summary": "Cancel Workflow",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					},
					{
						"in": "body",
						"name": "user",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"notifyCounterparty": {
									"$ref": "#/definitions/notifyCounterparty"
								},
								"comment": {
									"$ref": "#/definitions/commentText"
								}
							},
							"required": [
								"type",
								"email"
							]
						}
					}
				],
				"responses": {
					"204": {
						"description": "default",
						"schema": {
							"type": "object"
						}
					}
				}
			}
		},
		"/workflows/{Workflow}/pause": {
			"post": {
				"description": "Pause a Workflow.",
				"operationId": "PauseWorkflow",
				"summary": "Pause Workflow",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					},
					{
						"in": "body",
						"name": "user",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"notifyCounterparty": {
									"$ref": "#/definitions/notifyCounterparty"
								},
								"comment": {
									"$ref": "#/definitions/commentText"
								}
							},
							"required": [
								"type",
								"email"
							]
						}
					}
				],
				"responses": {
					"204": {
						"description": "default",
						"schema": {
							"type": "object"
						}
					}
				}
			}
		},
		"/workflows/{Workflow}/resume": {
			"post": {
				"description": "Resume a Workflow.",
				"operationId": "ResumeWorkflow",
				"summary": "Resume Workflow",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					},
					{
						"in": "body",
						"name": "user",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"notifyCounterparty": {
									"$ref": "#/definitions/notifyCounterparty"
								},
								"comment": {
									"$ref": "#/definitions/commentText"
								}
							},
							"required": [
								"type",
								"email"
							]
						}
					}
				],
				"responses": {
					"204": {
						"description": "default",
						"schema": {
							"type": "object"
						}
					}
				}
			}
		},
		"/workflows/{Workflow}/comments/{Comment}": {
			"get": {
				"description": "Return a single comment for a specified workflow.",
				"operationId": "RetrieveComment",
				"summary": "Retrieve a Comment from a Specified Workflow",
				"x-ms-visibility": "important",
				"parameters": [
					{
						"$ref": "#/parameters/workflow_ID_path"
					},
					{
						"$ref": "#/parameters/comment_ID_path"
					}
				],
				"responses": {
					"200": {
						"description": "default",
						"schema": {
							"$ref": "#/definitions/commentObjectGet"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"activityItem": {
			"title": "Activity Item",
			"description": "Identifier of the activity being replied to.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"actorId": {
			"title": "Actor ID",
			"description": "The identifier of the actor.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"actorType": {
			"title": "Actor Type",
			"description": "The type of actor.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"addedParticipants": {
			"title": "Added Participants",
			"description": "Users added to the conversation.",
			"type": "array",
			"x-ms-visibility": "advanced",
			"items": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/definitions/userId"
					},
					"displayName": {
						"$ref": "#/definitions/userDisplayName"
					}
				}
			}
		},
		"addUsersToWorkflow": {
			"title": "Add to Workflow",
			"description": "Set to true to add mentioned users to the workflow",
			"type": "boolean",
			"x-ms-visibility": "important",
			"default": true
		},
		"agreementDate": {
			"title": "Agreement Date",
			"description": "The date of the agreement",
			"type": "object",
			"x-ms-visibility": "important",
			"properties": {
				"type": {
					"$ref": "#/definitions/dataType"
				},
				"value": {
					"$ref": "#/definitions/propertyValue"
				}
			}
		},
		"approvalStatus": {
			"title": "Status",
			"description": "The status of the approval.",
			"type": "string",
			"x-ms-visibility": "important",
			"enum": [
				"approved",
				"pending"
			]
		},
		"approvalType": {
			"title": "Approval Type",
			"description": "The type of approval.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"assignees": {
			"title": "Assignees",
			"description": "The assigned users",
			"type": "array",
			"x-ms-visibility": "advanced",
			"items": {
				"type": "object",
				"properties": {
					"email": {
						"$ref": "#/definitions/userEmail"
					},
					"userId": {
						"$ref": "#/definitions/userId"
					},
					"userName": {
						"$ref": "#/definitions/username"
					}
				}
			}
		},
		"asyncJobId": {
			"title": "Async Job ID",
			"description": "The ID of the asynchronous job",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"asyncJobStatusUrl": {
			"title": "Async Job Status URL",
			"description": "The URL to check the status of the asynchronous job",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"attachmentDisplayName": {
			"title": "Display Name",
			"description": "The display name of the attachment.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"attachmentName": {
			"title": "System Name",
			"description": "The internal name of the attachment.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"attributes": {
			"title": "Workflow Attributes",
			"description": "The data that will be used to populate the workflow's fields.",
			"type": "object"
		},
		"author": {
			"title": "Author",
			"description": "Information about the author of the original comment.",
			"type": "object",
			"x-ms-visibility": "important",
			"properties": {
				"type": {
					"$ref": "#/definitions/userType"
				},
				"displayName": {
					"$ref": "#/definitions/userDisplayName"
				},
				"email": {
					"$ref": "#/definitions/userEmail"
				},
				"userId": {
					"$ref": "#/definitions/userId"
				},
				"companyName": {
					"$ref": "#/definitions/userCompanyName"
				}
			}
		},
		"child": {
			"title": "Record",
			"description": "Object containing Record IDs or Ironclad IDs to be set as one of the children of the current record.",
			"type": "object",
			"x-ms-visibility": "important",
			"required": [
				"recordId"
			],
			"properties": {
				"recordId": {
					"$ref": "#/definitions/recordId"
				}
			}
		},
		"childIds": {
			"title": "Child Records",
			"description": "Child records in the repository.",
			"type": "array",
			"x-ms-visibility": "advanced",
			"items": {
				"type": "string",
				"title": "ID",
				"description": "The identifier of a child record in the repository.",
				"x-ms-visibility": "advanced"
			}
		},
		"children": {
			"title": "Children",
			"description": "List of objects containing the Record IDs or Ironclad IDs of the records to be set as child records of the current record.",
			"type": "array",
			"x-ms-visibility": "important",
			"items": {
				"$ref": "#/definitions/child"
			}
		},
		"code": {
			"title": "Code",
			"description": "The error code returned by the api.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"commentId": {
			"title": "ID",
			"description": "Identifier of the comment.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"commentMetadata": {
			"title": "Metadata",
			"description": "Additional information about the comment.",
			"type": "object",
			"x-ms-visibility": "advanced",
			"properties": {
				"message": {
					"$ref": "#/definitions/commentText"
				},
				"addedParticipants": {
					"$ref": "#/definitions/addedParticipants"
				},
				"repliedTo": {
					"type": "object",
					"title": "Replied To",
					"description": "Information about the comment being replied to.",
					"x-ms-visibility": "advanced",
					"properties": {
						"activityItem": {
							"$ref": "#/definitions/activityItem"
						},
						"author": {
							"$ref": "#/definitions/author"
						}
					}
				},
				"mentionedUserDetails": {
					"type": "array",
					"title": "Mentioned Users",
					"description": "Details of users mentioned in the comment.",
					"x-ms-visibility": "advanced",
					"items": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string",
								"title": "ID",
								"description": "Unique identifier of the mentioned user.",
								"x-ms-visibility": "important"
							},
							"email": {
								"type": "string",
								"title": "Email",
								"description": "Email of the mentioned user.",
								"x-ms-visibility": "important"
							},
							"displayName": {
								"type": "string",
								"title": "Display Name",
								"description": "Name of the mentioned user.",
								"x-ms-visibility": "important"
							}
						}
					}
				}
			}
		},
		"commentObjectGet": {
			"title": "Comment",
			"description": "A comment on the workflow.",
			"type": "object",
			"x-ms-visibility": "important",
			"properties": {
				"metadata": {
					"$ref": "#/definitions/commentMetadata"
				},
				"id": {
					"$ref": "#/definitions/commentId"
				},
				"commentType": {
					"$ref": "#/definitions/commentType"
				},
				"author": {
					"$ref": "#/definitions/author"
				},
				"isExternal": {
					"$ref": "#/definitions/isExternal"
				},
				"reactions": {
					"$ref": "#/definitions/reactions"
				}
			}
		},
		"commentObjectPost": {
			"title": "Comment",
			"description": "The comment object.",
			"type": "object",
			"x-ms-visibility": "important",
			"properties": {
				"message": {
					"$ref": "#/definitions/commentText"
				},
				"addUsersToWorkflow": {
					"$ref": "#/definitions/addUsersToWorkflow"
				}
			}
		},
		"commentText": {
			"title": "Text",
			"description": "The text of the comment.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"commentType": {
			"title": "Type",
			"description": "Type of the activity item.",
			"type": "string",
			"x-ms-visibility": "advanced"
		},
		"commentsGet": {
			"title": "Comments",
			"description": "The list of comments.",
			"type": "array",
			"x-ms-visibility": "advanced",
			"items": {
				"$ref": "#/definitions/commentObjectGet"
			}
		},
		"contentType": {
			"title": "Content Type",
			"description": "The content type of the attachment.",
			"type": "string",
			"x-ms-visibility": "advanced"
		},
		"count": {
			"title": "Count",
			"description": "The number of records matching your criteria.",
			"type": "integer",
			"x-ms-visibility": "advanced",
			"format": "int32"
		},
		"counterpartyName": {
			"title": "Counterparty Name",
			"description": "The name of the counterparty.",
			"type": "object",
			"x-ms-visibility": "important",
			"properties": {
				"type": {
					"$ref": "#/definitions/dataType"
				},
				"value": {
					"$ref": "#/definitions/propertyValue"
				}
			}
		},
		"created": {
			"title": "Created Date Time",
			"description": "The date and time when the Workflow or record was created.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"creator": {
			"title": "Creator",
			"description": "The Ironclad user that launched the workflow.",
			"type": "object",
			"x-ms-visibility": "important",
			"properties": {
				"displayName": {
					"$ref": "#/definitions/userDisplayName"
				},
				"email": {
					"$ref": "#/definitions/userEmail"
				},
				"id": {
					"$ref": "#/definitions/userId"
				},
				"title": {
					"$ref": "#/definitions/userTitle"
				},
				"username": {
					"$ref": "#/definitions/username"
				}
			}
		},
		"creator_body": {
			"title": "Creator",
			"description": "The Ironclad user (must be a user in your Ironclad account) to be used for launching the workflow.",
			"type": "object",
			"x-ms-visibility": "important",
			"properties": {
				"email": {
					"$ref": "#/definitions/userEmail"
				},
				"id": {
					"$ref": "#/definitions/userId"
				},
				"type": {
					"$ref": "#/definitions/userIdentificationAttribute"
				}
			},
			"required": [
				"email",
				"type"
			]
		},
		"dataType": {
			"title": "Data Type",
			"description": "The data type of the property.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"download": {
			"title": "Download Path",
			"description": "The path to the current version of the document.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"downloadLink": {
			"title": "Download Link",
			"description": "The link to download the attachment.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"duration": {
			"title": "Duration",
			"description": "The duration of the approval request.",
			"type": "integer",
			"x-ms-visibility": "important"
		},
		"emojiId": {
			"title": "Emoji ID",
			"description": "Identifier of the emoji used in the reaction.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"endTime": {
			"title": "End Time",
			"description": "The end time of the approval request.",
			"type": "string",
			"x-ms-visibility": "important",
			"format": "date-time"
		},
		"errorMessage": {
			"title": "Message",
			"description": "The error message returned by the api.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"event": {
			"title": "Type",
			"description": "The type of the event.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"importId": {
			"title": "Import ID",
			"description": "The unique identifier of the import operation.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"isExternal": {
			"title": "Is External",
			"description": "Indicates if the comment is from an external user.",
			"type": "boolean",
			"x-ms-visibility": "advanced"
		},
		"lastUpdated": {
			"title": "Last Updated Date Time",
			"description": "Workflow or record last updated since.",
			"type": "string",
			"x-ms-visibility": "advanced",
			"format": "date"
		},
		"link": {
			"title": "Related Record",
			"description": "A related record.",
			"type": "object",
			"x-ms-visibility": "important",
			"required": [
				"recordId"
			],
			"properties": {
				"recordId": {
					"$ref": "#/definitions/recordId"
				}
			}
		},
		"links": {
			"title": "Related Records",
			"description": "List of objects containing the Record IDs or Ironclad IDs of the records to be set as related of the current record.",
			"type": "array",
			"x-ms-visibility": "important",
			"items": {
				"$ref": "#/definitions/link"
			}
		},
		"notifyCounterparty": {
			"title": "Notify Counterparty",
			"description": "Set to true to notify the counterparty of the cancellation.",
			"type": "boolean",
			"x-ms-visibility": "important"
		},
		"page": {
			"title": "Page",
			"description": "The index of the page.",
			"type": "integer",
			"x-ms-visibility": "advanced",
			"format": "int32"
		},
		"pageSize": {
			"title": "Page Size",
			"description": "A limit of the number of results.",
			"type": "integer",
			"x-ms-visibility": "advanced",
			"format": "int32"
		},
		"param": {
			"title": "Parameter",
			"description": "The parameter causing the error.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"parent": {
			"title": "Parent",
			"description": "Object containing Record IDs or Ironclad IDs to be set as the parent of the current record.",
			"type": "object",
			"x-ms-visibility": "important",
			"properties": {
				"recordId": {
					"$ref": "#/definitions/recordId"
				}
			}
		},
		"parentId": {
			"title": "Parent Record ID",
			"description": "The identifier of the parent record in the repository.",
			"type": "string",
			"x-ms-visibility": "advanced"
		},
		"propertyArray": {
			"title": "Property Array",
			"description": "The record properties as an array.",
			"type": "array",
			"x-ms-visibility": "important",
			"items": {
				"type": "object",
				"description": "A record property.",
				"x-ms-visibility": "important",
				"title": "Property",
				"properties": {
					"propertyName": {
						"$ref": "#/definitions/propertyName"
					},
					"propertyProperties": {
						"title": "Properties",
						"description": "The properties of the property.",
						"type": "object",
						"x-ms-visibility": "important",
						"properties": {
							"type": {
								"title": "Type",
								"description": "The attribute type.",
								"x-ms-visibility": "important",
								"type": "string"
							},
							"value": {
								"title": "Value",
								"description": "The value given to this property.",
								"x-ms-visibility": "important"
							}
						}
					}
				}
			}
		},
		"propertyDisplayName": {
			"title": "Display Name",
			"description": "The display name of the property.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"propertyName": {
			"title": "System Name",
			"description": "The internal name of the property.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"propertyValue": {
			"title": "Value",
			"description": "The value of the property.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"reactor": {
			"title": "Reactor",
			"description": "A user who reacted to the comment.",
			"type": "object",
			"x-ms-visibility": "advanced",
			"properties": {
				"id": {
					"$ref": "#/definitions/userId"
				},
				"displayName": {
					"$ref": "#/definitions/userDisplayName"
				}
			}
		},
		"reactors": {
			"title": "Reactors",
			"description": "Users who reacted to the comment.",
			"type": "array",
			"x-ms-visibility": "advanced",
			"items": {
				"$ref": "#/definitions/reactor"
			}
		},
		"reactions": {
			"title": "Reactions",
			"description": "Reactions to the comment.",
			"type": "object",
			"x-ms-visibility": "advanced",
			"properties": {
				"emojiId": {
					"$ref": "#/definitions/emojiId"
				},
				"reactors": {
					"$ref": "#/definitions/reactors"
				}
			}
		},
		"record": {
			"title": "Record",
			"description": "A repository record and its associated data.",
			"type": "object",
			"properties": {
				"attachments": {
					"$ref": "#/definitions/recordAttachments"
				},
				"id": {
					"$ref": "#/definitions/recordId"
				},
				"lastUpdated": {
					"$ref": "#/definitions/lastUpdated"
				},
				"links": {
					"$ref": "#/definitions/links"
				},
				"childIds": {
					"$ref": "#/definitions/childIds"
				},
				"parentId": {
					"$ref": "#/definitions/parentId"
				},
				"name": {
					"$ref": "#/definitions/recordName"
				},
				"propertiesArray": {
					"$ref": "#/definitions/propertyArray"
				},
				"properties": {
					"title": "Properties",
					"description": "The properties of the record.",
					"type": "object",
					"x-ms-visibility": "important",
					"properties": {
						"agreementDate": {
							"$ref": "#/definitions/agreementDate"
						},
						"counterpartyName": {
							"$ref": "#/definitions/counterpartyName"
						}
					}
				},
				"source": {
					"$ref": "#/definitions/source"
				},
				"type": {
					"$ref": "#/definitions/recordType"
				}
			}
		},
		"recordAttachments": {
			"title": "Attachments",
			"description": "The documents attached to the record.",
			"type": "object",
			"x-ms-visibility": "important",
			"properties": {
				"contentType": {
					"$ref": "#/definitions/contentType"
				},
				"filename": {
					"$ref": "#/definitions/recordFileName"
				},
				"href": {
					"$ref": "#/definitions/downloadLink"
				}
			}
		},
		"recordAttachmentsArray": {
			"title": "Attachments",
			"description": "The attachments of the record.",
			"type": "array",
			"items": {
				"title": "Attachment",
				"type": "object",
				"x-ms-visibility": "important",
				"properties": {
					"attachmentName": {
						"$ref": "#/definitions/attachmentName"
					},
					"attachmentAttributes": {
						"title": "Attributes",
						"description": "The attributes of the record attachment.",
						"type": "object",
						"x-ms-visibility": "important",
						"properties": {
							"displayName": {
								"$ref": "#/definitions/attachmentDisplayName"
							}
						}
					}
				}
			}
		},
		"recordAttachmentsDictionary": {
			"title": "Attachments Dictionary",
			"description": "A dictionary of record attachments",
			"type": "object",
			"x-ms-visibility": "advanced"
		},
		"recordFileName": {
			"title": "File Name",
			"description": "The name of the attachment",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"recordId": {
			"title": "ID",
			"description": "The identifier of the repository record.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"recordName": {
			"title": "Name",
			"description": "The name of the repository record.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"recordPropertiesArray": {
			"title": "Record Properties",
			"description": "The properties for this record.",
			"type": "array",
			"x-ms-visibility": "important",
			"items": {
				"title": "Object",
				"description": "A record property object.",
				"x-ms-visibility": "important",
				"properties": {
					"propertyName": {
						"$ref": "#/definitions/propertyName"
					},
					"propertyAttributes": {
						"title": "Attributes",
						"description": "The attributes of the record property.",
						"type": "object",
						"x-ms-visibility": "important",
						"properties": {
							"displayName": {
								"$ref": "#/definitions/propertyDisplayName"
							},
							"type": {
								"$ref": "#/definitions/dataType"
							},
							"visible": {
								"$ref": "#/definitions/visible"
							}
						}
					}
				},
				"type": "object"
			}
		},
		"recordPropertiesDictionary": {
			"title": "Properties Dictionary",
			"description": "A dictionary of record properties for this record.",
			"type": "object",
			"x-ms-visibility": "advanced"
		},
		"recordType": {
			"title": "Type",
			"description": "The type of the record or Workflow",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"recordTypeDescription": {
			"title": "Description",
			"description": "The description of the record type.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"recordTypeDisplayName": {
			"title": "Display Name",
			"description": "The display name of the record or Workflow type",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"recordTypesDictionary": {
			"title": "Record Type Dictionary",
			"description": "A dictionary of record types available in this instance.",
			"type": "object",
			"x-ms-visibility": "advanced"
		},
		"recordTypesArray": {
			"title": "Record Types",
			"description": "An array of record types available in this instance.",
			"type": "array",
			"x-ms-visibility": "important",
			"items": {
				"properties": {
					"recordTypeName": {
						"$ref": "#/definitions/recordType"
					},
					"recordTypeProperties": {
						"title": "Properties",
						"description": "The record type properties",
						"type": "object",
						"properties": {
							"displayName": {
								"$ref": "#/definitions/recordTypeDisplayName"
							},
							"description": {
								"$ref": "#/definitions/recordTypeDescription"
							}
						}
					}
				},
				"type": "object"
			}
		},
		"record_type_body": {
			"title": "Type",
			"description": "The type of record to be created. You can view available record types by retrieving records metadata.",
			"type": "string",
			"x-ms-visibility": "important",
			"x-ms-dynamic-values": {
				"operationId": "GetRecordSchema",
				"value-collection": "recordTypesArray",
				"value-path": "recordTypeName",
				"value-title": "recordTypeProperties/displayName"
			},
			"x-ms-summary": "Type"
		},
		"remainingCredits": {
			"title": "Remaining Credits",
			"description": "The number of credits remaining after the operation.",
			"type": "integer",
			"x-ms-visibility": "important"
		},
		"repliedToActivityFeedMessageId": {
			"title": "Replied To Activity Feed Message ID",
			"description": "The identifier of the activity feed message that this message is a reply to.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"reviewerStatus": {
			"title": "Status",
			"description": "The status of the review task",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"reviewerType": {
			"title": "Type",
			"description": "The reviewer type",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"roleDisplayName": {
			"title": "Display Name",
			"description": "The display name of the role.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"roleId": {
			"title": "ID",
			"description": "The identifier of the role.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"roles": {
			"title": "Roles",
			"description": "The roles in this Workflow.",
			"type": "array",
			"x-ms-visibility": "important",
			"items": {
				"properties": {
					"assignees": {
						"$ref": "#/definitions/assignees"
					},
					"displayName": {
						"$ref": "#/definitions/roleDisplayName"
					},
					"id": {
						"$ref": "#/definitions/roleId"
					}
				},
				"type": "object"
			}
		},
		"routingOrder": {
			"title": "Routing Order",
			"description": "The routing order of the signer.",
			"type": "integer",
			"x-ms-visibility": "important",
			"format": "int32"
		},
		"schemaArray": {
			"title": "Schema Array",
			"description": "The workflow schema as an array.",
			"type": "array",
			"x-ms-visibility": "important",
			"items": {
				"type": "object",
				"description": "A schema definition.",
				"x-ms-visibility": "important",
				"title": "Definition",
				"properties": {
					"propertyName": {
						"type": "string",
						"title": "Attribute System Name",
						"description": "The name of the schema attribute.",
						"x-ms-visibility": "important"
					},
					"propertyProperties": {
						"title": "Attribute",
						"description": "The properties of the schema attribute.",
						"type": "object",
						"x-ms-visibility": "important",
						"properties": {
							"type": {
								"title": "Type",
								"description": "The attribute type.",
								"x-ms-visibility": "important",
								"type": "string"
							},
							"displayName": {
								"type": "string",
								"title": "Display Name",
								"description": "The display name of the attribute.",
								"x-ms-visibility": "important"
							},
							"elementType": {
								"type": "object",
								"title": "Array Element",
								"description": "The elements of the attribute, if an array.",
								"x-ms-visbility": "important",
								"properties": {
									"type": {
										"title": "Type",
										"description": "The attribute type.",
										"x-ms-visibility": "important",
										"type": "string"
									},
									"displayName": {
										"type": "string",
										"title": "Display Name",
										"description": "The display name of the attribute.",
										"x-ms-visibility": "important"
									}
								}
							}
						}
					}
				}
			}
		},
		"signatureState": {
			"title": "Signature State Object",
			"description": "The signature state of the Workflow.",
			"type": "object",
			"x-ms-visibility": "internal",
			"properties": {
				"state": {
					"title": "State",
					"description": "The signature state of the Workflow.",
					"type": "string",
					"x-ms-visibility": "important"
				}
			}
		},
		"signatureStatus": {
			"title": "Signature Status Object",
			"description": "The signature status object",
			"type": "object",
			"x-ms-visibility": "internal",
			"properties": {
				"status": {
					"type": "string",
					"description": "The signature status of the role.",
					"title": "Signature Status",
					"x-ms-visibility": "important"
				}
			}
		},
		"signers": {
			"title": "Signers",
			"description": "The signers in this Workflow.",
			"type": "array",
			"x-ms-visibility": "important",
			"items": {
				"type": "object",
				"description": "A signer in this Workflow.",
				"title": "Signer",
				"x-ms-visibility": "important",
				"properties": {
					"roleName": {
						"$ref": "#/definitions/roleDisplayName"
					},
					"name": {
						"$ref": "#/definitions/userDisplayName"
					},
					"email": {
						"$ref": "#/definitions/userEmail"
					},
					"signatureStatus": {
						"$ref": "#/definitions/signatureStatus"
					},
					"routingOrder": {
						"$ref": "#/definitions/routingOrder"
					}
				}
			}
		},
		"source": {
			"title": "Source",
			"description": "The source of the record.",
			"type": "object",
			"x-ms-visibility": "advanced",
			"properties": {
				"type": {
					"title": "Type",
					"description": "The type of the source.",
					"type": "string",
					"x-ms-visibility": "important"
				},
				"workflowId": {
					"$ref": "#/definitions/workflowId"
				}
			}
		},
		"startTime": {
			"title": "Start Time",
			"description": "The start time of the approval request.",
			"type": "string",
			"x-ms-visibility": "important",
			"format": "date-time"
		},
		"step": {
			"title": "Step",
			"description": "The current step of the Workflow.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"timestamp": {
			"title": "Timestamp",
			"description": "The timestamp of the event.",
			"type": "string",
			"x-ms-visibility": "advanced"
		},
		"turnEndTime": {
			"title": "Turn End Time",
			"description": "The time the turn ended.",
			"type": "string",
			"x-ms-visibility": "important",
			"format": "date-time"
		},
		"turnLocation": {
			"title": "Turn Location",
			"description": "The location of the turn.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"turnNumber": {
			"title": "Turn Number",
			"description": "The number of the turn.",
			"type": "integer",
			"x-ms-visibility": "important"
		},
		"turnParty": {
			"title": "Turn Party",
			"description": "The party that took the turn.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"turnStartTime": {
			"title": "Turn Start Time",
			"description": "The time the turn started.",
			"type": "string",
			"x-ms-visibility": "important",
			"format": "date-time"
		},
		"user": {
			"title": "User",
			"description": "The Ironclad user.",
			"type": "object",
			"x-ms-visibility": "important",
			"properties": {
				"type": {
					"$ref": "#/definitions/userIdentificationAttribute"
				},
				"email": {
					"$ref": "#/definitions/userEmail"
				}
			}
		},
		"userCompanyName": {
			"title": "Company Name",
			"description": "Company name of the author.",
			"type": "string",
			"x-ms-visibility": "advanced"
		},
		"userDisplayName": {
			"title": "Display Name",
			"description": "The display name of the user.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"userEmail": {
			"title": "Email",
			"description": "The email address of the Ironclad user.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"userId": {
			"title": "ID",
			"description": "The user ID of the Ironclad user.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"userIdentificationAttribute": {
			"title": "Attribute",
			"description": "The type of value used to identify the user.",
			"type": "string",
			"x-ms-visibility": "internal",
			"default": "email",
			"enum": [
				"email",
				"id"
			],
			"x-ms-enum-values": [
				{
					"displayName": "User Email",
					"value": "email"
				},
				{
					"displayName": "User ID",
					"value": "id"
				}
			]
		},
		"userTitle": {
			"title": "Title",
			"description": "The job title of the user.",
			"type": "string",
			"x-ms-visibility": "advanced"
		},
		"userType": {
			"title": "Type",
			"description": "Type of the user.",
			"type": "string",
			"x-ms-visibility": "advanced"
		},
		"username": {
			"title": "Username",
			"description": "The username of the user.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"version": {
			"title": "Version",
			"description": "The version identifier of the Workflow document.",
			"type": "string",
			"x-ms-visibility": "advanced"
		},
		"visible": {
			"title": "Visibility",
			"description": "The visibility of the item.",
			"type": "boolean",
			"x-ms-visibility": "important",
			"enum": [
				true,
				false
			]
		},
		"webhookId": {
			"title": "Webhook ID",
			"description": "The identifier of the registered webhook.",
			"type": "string",
			"x-ms-visibility": "advanced"
		},
		"webhookNotificationContent": {
			"title": "Event Data",
			"description": "The webhook data received from the event.",
			"type": "object",
			"properties": {
				"companyID": {
					"title": "Instance ID",
					"description": "The identifier of the Ironclad instance.",
					"type": "string",
					"x-ms-visibility": "internal"
				},
				"payload": {
					"title": "Trigger Payload",
					"description": "The contents of the trigger payload.",
					"type": "object",
					"x-ms-visibility": "advanced",
					"properties": {
						"event": {
							"$ref": "#/definitions/event"
						},
						"templateID": {
							"$ref": "#/definitions/workflowTemplateId"
						},
						"workflowID": {
							"$ref": "#/definitions/workflowId"
						}
					}
				},
				"timestamp": {
					"$ref": "#/definitions/timestamp"
				},
				"webhookID": {
					"$ref": "#/definitions/webhookId"
				}
			}
		},
		"workflow": {
			"title": "Workflow",
			"description": "An Ironclad Workflow.",
			"type": "object",
			"properties": {
				"approvals": {
					"$ref": "#/definitions/approvalStatus"
				},
				"attributes": {
					"type": "object",
					"properties": {
						"readableId": {
							"type": "string",
							"description": "The Ironclad ID of the workflow.",
							"title": "Ironclad ID",
							"x-ms-visibility": "important"
						},
						"counterpartyName": {
							"description": "The company name of the Counterparty",
							"title": "Counterparty Name",
							"type": "string",
							"x-ms-visibility": "important"
						},
						"draft": {
							"$ref": "#/definitions/workflowDraftDocuments"
						},
						"paperSource": {
							"description": "The source of the Workflow documents.",
							"title": "Paper Source",
							"type": "string",
							"x-ms-visibility": "important"
						},
						"signed": {
							"$ref": "#/definitions/workflowSignedDocuments"
						}
					}
				},
				"created": {
					"$ref": "#/definitions/created"
				},
				"creator": {
					"$ref": "#/definitions/creator"
				},
				"id": {
					"$ref": "#/definitions/workflowId"
				},
				"lastUpdated": {
					"$ref": "#/definitions/lastUpdated"
				},
				"roles": {
					"$ref": "#/definitions/roles"
				},
				"schemaArray": {
					"$ref": "#/definitions/schemaArray"
				},
				"signatures": {
					"$ref": "#/definitions/signatureState"
				},
				"status": {
					"$ref": "#/definitions/workflowStatus"
				},
				"step": {
					"$ref": "#/definitions/step"
				},
				"template": {
					"$ref": "#/definitions/workflowTemplateTitle"
				},
				"title": {
					"$ref": "#/definitions/workflowTitle"
				}
			}
		},
		"workflowDocument": {
			"title": "Document",
			"description": "A workflow document.",
			"type": "object",
			"x-ms-visibility": "important",
			"format": "byte"
		},
		"workflowDraftDocuments": {
			"title": "Document Drafts",
			"description": "If available, the draft documents in the Workflow.",
			"type": "array",
			"x-ms-visibility": "important",
			"items": {
				"properties": {
					"download": {
						"$ref": "#/definitions/download"
					},
					"filename": {
						"$ref": "#/definitions/workflowFileName"
					},
					"version": {
						"$ref": "#/definitions/version"
					}
				},
				"type": "object"
			}
		},
		"workflowFileName": {
			"title": "File Name",
			"description": "The file name of the document.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"workflowId": {
			"title": "ID",
			"description": "The unique identifier or Ironclad ID of a workflow.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"workflowSchema": {
			"title": "Workflow Schema",
			"description": "The fields used in the workflow launch form.",
			"type": "object",
			"x-ms-visibility": "important"
		},
		"workflowSignedDocuments": {
			"title": "Signed Documents",
			"description": "If available, the signed documents in the Workflow.",
			"type": "object",
			"x-ms-visibility": "important",
			"properties": {
				"download": {
					"$ref": "#/definitions/download"
				},
				"filename": {
					"$ref": "#/definitions/workflowFileName"
				},
				"version": {
					"$ref": "#/definitions/version"
				}
			}
		},
		"workflowStatus": {
			"title": "Workflow Status",
			"description": "The current status of the Workflow.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"workflowTemplateId": {
			"title": "Template",
			"description": "The identifier of the workflow template.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"workflowTemplateTitle": {
			"title": "Template Title",
			"description": "The title of the workflow template.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"workflowTitle": {
			"title": "Workflow Title",
			"description": "The title used for the launched workflow.",
			"type": "string",
			"x-ms-visibility": "important"
		},
		"workflow_template_ID_body": {
			"title": "Template",
			"description": "The identifier of the workflow template.",
			"type": "string",
			"x-ms-visibility": "important",
			"x-ms-dynamic-values": {
				"operationId": "ListWorkflowSchemas",
				"parameters": {
					"form": "launch"
				},
				"value-collection": "list",
				"value-path": "id",
				"value-title": "name"
			},
			"x-ms-summary": "Template"
		}
	},
	"parameters": {
		"recordType_formData": {
			"name": "recordType",
			"in": "formData",
			"description": "Upload a smart import record as an existing record type.",
			"required": false,
			"type": "string",
			"x-ms-visibility": "important",
			"x-ms-summary": "Record Type"
		},
		"newRecordTypeId_formData": {
			"name": "newRecordTypeId",
			"in": "formData",
			"description": "The record type ID for a not-yet-existing record type. Must be provided along with a newRecordTypeDisplayName.",
			"required": false,
			"type": "string",
			"x-ms-visibility": "important",
			"x-ms-summary": "New Record Type ID"
		},
		"newRecordTypeDisplayName_formData": {
			"name": "newRecordTypeDisplayName",
			"in": "formData",
			"description": "The display name of the new record type to create.",
			"required": false,
			"type": "string",
			"x-ms-visibility": "important",
			"x-ms-summary": "New Record Type Display Name"
		},
		"attachment_formData": {
			"name": "attachment",
			"in": "formData",
			"description": "The file to upload.",
			"required": true,
			"type": "file",
			"x-ms-visibility": "important",
			"x-ms-summary": "Attachment"
		},
		"comment_ID_path": {
			"description": "The unique identifier of a comment.",
			"in": "path",
			"name": "Comment",
			"required": true,
			"type": "string",
			"x-ms-summary": "Comment",
			"x-ms-visibility": "important"
		},
		"documentKey_path": {
			"description": "The unique identifier for the attachment. This key can be located using the Retrieve a Workflow endpoint. In the response, locate the file attribute (e.g., draft) and look at its download parameter. The download parameter includes the key at the end of the URL .../document/{ATTACHMENT_KEY}/download.",
			"in": "path",
			"name": "Key",
			"required": true,
			"type": "string",
			"x-ms-summary": "Key",
			"x-ms-visibility": "important"
		},
		"asyncJob_path": {
			"description": "The identifier provided in the response of creating a Workflow asynchronously.",
			"in": "path",
			"name": "job",
			"required": true,
			"type": "string",
			"x-ms-summary": "Job",
			"x-ms-visibility": "important"
		},
		"form_query": {
			"default": "launch",
			"description": "The form to retrieve the schema for.",
			"enum": [
				"launch"
			],
			"x-ms-enum-values": [
				{
					"displayName": "Launch Form",
					"value": "launch"
				}
			],
			"in": "query",
			"name": "form",
			"required": true,
			"type": "string",
			"x-ms-summary": "Form",
			"x-ms-visibility": "important"
		},
		"lastUpdated_query": {
			"format": "date",
			"in": "query",
			"name": "lastUpdated",
			"required": false,
			"type": "string",
			"x-ms-summary": "Last Updated",
			"x-ms-visibility": "important",
			"description": "Get records/workflows updated since (UTC)."
		},
		"pageSize_query": {
			"default": 100,
			"description": "A limit of the number of results to return.",
			"in": "query",
			"name": "pageSize",
			"required": true,
			"type": "integer",
			"x-ms-summary": "Page Size",
			"x-ms-visibility": "important"
		},
		"page_query": {
			"default": 0,
			"description": "The page number used when paginating through a list of results.",
			"in": "query",
			"name": "page",
			"required": true,
			"type": "integer",
			"x-ms-summary": "Page",
			"x-ms-visibility": "important"
		},
		"record_ID_path": {
			"description": "The ID or Ironclad ID of the Record.",
			"in": "path",
			"name": "Record",
			"required": true,
			"type": "string",
			"x-ms-dynamic-values": {
				"operationId": "ListAllRecords",
				"parameters": {
					"page": 0,
					"pageSize": 100,
					"sortDirection": "DESC",
					"sortField": "agreementDate"
				},
				"value-collection": "list",
				"value-path": "id",
				"value-title": "name"
			},
			"x-ms-summary": "Record",
			"x-ms-visibility": "important"
		},
		"recordId_query": {
			"description": "The ID of the Record for prediction status.",
			"in": "query",
			"name": "recordId",
			"required": false,
			"type": "string",
			"x-ms-summary": "Record ID",
			"x-ms-visibility": "important"
		},
		"importId_query": {
			"description": "The ID of the Import for prediction statuses.",
			"in": "query",
			"name": "importId",
			"required": false,
			"type": "string",
			"x-ms-summary": "Import ID",
			"x-ms-visibility": "important"
		},
		"record_type_query": {
			"description": "Comma separated (no spaces) record types to export. Use the Retrieve Records Schema endpoint to retrieve a list of types.",
			"in": "query",
			"name": "types",
			"required": false,
			"type": "string",
			"x-ms-dynamic-values": {
				"operationId": "GetRecordSchema",
				"value-collection": "recordTypesArray",
				"value-path": "recordTypeName",
				"value-title": "recordTypeProperties/displayName"
			},
			"x-ms-summary": "Types",
			"x-ms-visibility": "important"
		},
		"sortDirection_query": {
			"default": "DESC",
			"description": "The direction the records are sorted by in correlation with the sortField.",
			"enum": [
				"DESC",
				"ASC"
			],
			"x-ms-enum-values": [
				{
					"displayName": "descending",
					"value": "DESC"
				},
				{
					"displayName": "ascending",
					"value": "ASC"
				}
			],
			"in": "query",
			"name": "sortDirection",
			"required": false,
			"type": "string",
			"x-ms-summary": "Sort Direction",
			"x-ms-visibility": "important"
		},
		"filter_query": {
			"description": "Filter records for those that contain (1) the specified property with (2) the specified value. The record property ID should be enclosed in brackets [ ] and the value should be enclosed in single quotes.",
			"in": "query",
			"name": "filter",
			"required": false,
			"type": "string",
			"x-ms-summary": "Filter",
			"x-ms-visibility": "important"
		},
		"sortField_query": {
			"default": "lastUpdated",
			"description": "The field to sort Records. Only one field is supported in the sort operation.",
			"enum": [
				"lastUpdated",
				"agreementDate",
				"name"
			],
			"x-ms-enum-values": [
				{
					"displayName": "Last Updated",
					"value": "lastUpdated"
				},
				{
					"displayName": "Agreement Date",
					"value": "agreementDate"
				},
				{
					"displayName": "Name",
					"value": "name"
				}
			],
			"in": "query",
			"name": "sortField",
			"required": false,
			"type": "string",
			"x-ms-summary": "Sort Field",
			"x-ms-visibility": "important"
		},
		"workflow_ID_path": {
			"description": "The identifier or Ironclad ID of a workflow.",
			"in": "path",
			"name": "Workflow",
			"required": true,
			"type": "string",
			"x-ms-summary": "Workflow",
			"x-ms-visibility": "important",
			"x-ms-dynamic-values": {
				"operationId": "ListWorkflows",
				"value-path": "id",
				"value-collection": "list",
				"value-title": "title",
				"parameters": {
					"page": 0,
					"pageSize": 100
				}
			}
		},
		"smartImport_path": {
			"description": "The Import Id. You can upload a record to an existing import in the repository.",
			"in": "path",
			"name": "importId",
			"required": true,
			"type": "string",
			"x-ms-summary": "Smart Import",
			"x-ms-visibility": "important"
		},
		"role_ID_path": {
			"description": "The unique identifier of the approver role whose status should be changed.",
			"in": "path",
			"name": "Role",
			"required": true,
			"type": "string",
			"x-ms-summary": "Role",
			"x-ms-visibility": "important"
		},
		"userEmail_query": {
			"description": "The Ironclad user's email address.",
			"in": "query",
			"name": "email",
			"required": true,
			"type": "string",
			"x-ms-summary": "Email",
			"x-ms-visibility": "important"
		},
		"revertingUser_body": {
			"description": "The Ironclad user reverting the workflow to the Review step. The user must be a participant on the workflow.",
			"in": "body",
			"name": "user",
			"required": true,
			"schema": {
				"$ref": "#/definitions/user"
			},
			"x-ms-summary": "Reverting User",
			"x-ms-visibility": "important"
		},
		"workflow_status_query": {
			"description": "The status of the Workflow.",
			"enum": [
				"active",
				"paused",
				"completed",
				"cancelled"
			],
			"in": "query",
			"name": "status",
			"required": false,
			"type": "string",
			"x-ms-summary": "Workflow Status",
			"x-ms-visibility": "important"
		},
		"workflow_template_ID_path": {
			"description": "The identifier of the workflow template.",
			"in": "path",
			"name": "Template",
			"required": true,
			"type": "string",
			"x-ms-dynamic-values": {
				"operationId": "ListWorkflowSchemas",
				"parameters": {
					"form": "launch"
				},
				"value-collection": "list",
				"value-path": "id",
				"value-title": "name"
			},
			"x-ms-summary": "Ironclad Workflow Template",
			"x-ms-visibility": "important"
		},
		"workflow_template_ID_query": {
			"description": "The identifier of the workflow template.",
			"in": "query",
			"name": "template",
			"required": false,
			"type": "string",
			"x-ms-dynamic-values": {
				"operationId": "ListWorkflowSchemas",
				"parameters": {
					"form": "launch"
				},
				"value-collection": "list",
				"value-path": "id",
				"value-title": "name"
			},
			"x-ms-summary": "Template ID",
			"x-ms-visibility": "important"
		},
		"actionDetails_query": {
			"name": "actorDetails",
			"in": "query",
			"type": "boolean",
			"description": "An optional boolean parameter that adds additional information about the actor to each item in the response. Defaults to false.",
			"x-ms-summary": "Actor Details",
			"x-ms-visibility": "important"
		}
	},
	"responses": {

	},
	"securityDefinitions": {

	},
	"security": [

	],
	"tags": [

	]
}
